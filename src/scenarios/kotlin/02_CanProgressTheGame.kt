package com.lunivore.hellbound

import com.lunivore.hellbound.glue.Scenario
import org.junit.Test

class CanProgressTheGame : Scenario() {

    @Test
    fun `The shape should move down on heartbeat`() {
        Given_a_game.thats_just_started()
        When_the_heart.beats()
        Then_the_grid.should_look_like("""
            ...........
            ....XXX....
            .....X.....
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            """)
    }

    @Test
    fun `If the shape collides with the bottom or another shape it should become junk`() {
        Given_a_game.thats_just_started()
        When_the_player.presses_the_sequence(" h h")
        Then_the_grid.should_look_like("""
                .....XX....
                ....XX.....
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ...........
                ....XX.....
                .....XX....
                ....XXX....
                .....X.....
                """)
    }

    @Test
    fun `If the junk has a full row then it should disappear after the heartbeat`() {
        // This sequence leaves the grid:
        //            ...........
        //            .........X.
        //            X....XX.XXX
        //            XX.XXXXXXXX
        //            XXXXXXXXXXX
        Given_a_game.with_existing_play("""
            EEDDDD h
            EDDD h
            EDDDDD h
            D h
            E h
            QAAA h
            QAAAA 
        """)

        When_the_heart.beats()

        Then_the_grid.should_look_like("""
            .....X.....
            .....X.....
            ....XX.....
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            ...........
            .........X.
            X....XX.XXX
            XX.XXXXXXXX
            """)
    }

    @Test
    fun `The game ends if the next piece can't be placed`() {

        Given_a_game.run_to_the_top()
        When_the_heart.beats()
        Then_the_game.should_be_over()

    }
}